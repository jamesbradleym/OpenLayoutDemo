//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>A flexible space planning zone.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FlexibleZone : SpaceBoundary
    {
        [JsonConstructor]
        public FlexibleZone(Profile @boundary, string @programType, double @height, Profile @boundary, IList<Polygon> @cells, double @area, double? @length, double? @depth, double @height, string @programGroup, string @programType, System.Guid? @level, System.Guid? @levelLayout, string @hyparSpaceType, Transform @transform, Material @material, Representation @representation, bool @isElementDefinition, System.Guid @id, string @name)
            : base(boundary, cells, area, length, depth, height, programGroup, programType, level, levelLayout, hyparSpaceType, transform, material, representation, isElementDefinition, id, name)
        {
            this.Boundary = @boundary;
            this.ProgramType = @programType;
            this.Height = @height;
            }
        
        // Empty constructor
        public FlexibleZone()
            : base()
        {
        }
    
        /// <summary>The flexible zone's boundary.</summary>
        [JsonProperty("Boundary", Required = Newtonsoft.Json.Required.AllowNull)]
        public Profile Boundary { get; set; }
    
        /// <summary>The program type of the flexible zone.</summary>
        [JsonProperty("Program Type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ProgramType { get; set; }
    
        /// <summary>The flexible zone's height.</summary>
        [JsonProperty("Height", Required = Newtonsoft.Json.Required.Always)]
        public double Height { get; set; }
    
    
    }
}